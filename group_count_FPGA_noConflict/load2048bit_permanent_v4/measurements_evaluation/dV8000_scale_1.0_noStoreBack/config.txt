// USING M20K RAM BLOCKS on FPGA to implement hashVec and countVec (embedded memory) and initialize these with zero
	[[intel::fpga_memory("BLOCK_RAM")]] std::array<fpvec<Type, inner_regSize>, m_HSIZE_v> hash_map;
	[[intel::fpga_memory("BLOCK_RAM")]] std::array<fpvec<Type, inner_regSize>, m_HSIZE_v> count_map;


/*		DEACTIVATE STORE-BACK FUNCTION --> RESULT WILL BE FALSE, but we want to check how large the influence of the final saving process is on the overall runtime of the algorithm.
	...
*/


	#define distinctValues (uint64_t) 8000

    #define multiplier (int) 16
    #define dataSize (uint64_t) (multiplier*10240000)               // 10240000*16 = 163840000 --> MOD 16 = 0; MOD 4096 = 0
    #define scale (float) (1.0)
    #define HSIZE (uint64_t) (distinctValues*scale)